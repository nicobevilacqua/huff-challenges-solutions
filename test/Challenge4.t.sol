// SPDX-License-Identifier: MIT
pragma solidity 0.8.19;

import "forge-std/Test.sol";
import {HuffDeployer} from "foundry-huff/HuffDeployer.sol";

contract Challenge4Test is Test {
    address private challenge;

    function setUp() external {
        challenge = HuffDeployer.deploy("Challenge4");
    }

    function test_Short() external {
        bytes memory data = "asd";
        bytes memory expected = "dsa";

        (bool success, bytes memory response) = challenge.staticcall(data);
        require(success);
        assertEq(response, expected);
    }

    function test_Long() external {
        bytes
            memory data = hex"fbcb8250b48f787d1e7adeb533eab384da4c05d3a4312cffc8a7439f0a6042136baf57a49b1c5ef4ef9cfb4ecac6483a54526901cd1b23d9c744a0aaba30974aa38fa405f21487336b4d9dc7a8775a517f378890b6f8165c50bd95744498f0e1b3312008770eccfe0fe5dabbfb7d14724929d45efa5aa310dec3431cbcd7b2e51375e73c4935d9aad4f8356894310c696410c060630a9438875d0446284ee11f59a73d92ad53b5344e863c3719ef54a6f98ec97150179d1a979e958c0105e82587ff04743df1610eb7b1c9a5ff6b38a26caf369a11b780f4462767a712243f093ce52c3811442e6d9f4283fb4621b1dc594f5fd345a638fcc30d37b7a057b054cf51d39de6f7cc6d0e2ee81ab97261343a809e2dddad29d61cd1e984c64e5c61598efba989842e3d572fb6aad238c2c0cc783defe3be4154ef9725362c6253520645714869d8cf96d4aff451d4b89bf0d348db591edb704cebc2005bc65b04bb2761ff5ec24750ddbf5423c002b74126d3580d25d8f27420ed88bf6cf9c7a46fe38bf99b192a0608ac77a90e9753853a5068e91ec504ab3c2b4fb1be705e41159c01b4a1546b3a15ff83820c6e14f827cfe8313eab949e7f32992b9da0e29a77e6259c3f016588c2203992b1dea60daade4b89ed9683bfa7327c73acb263146b7ff8126a45540a4a552faf3c4025c35947e9e385ae9c79f784d7fb8cf2a2edf13fe1de0b6703acdcd41fbf7ac8d2259243544d39a7c8c4733399ad2d92219925166c7f8297a02abc3caf6abc86ab18bf990686bcd246d725b03778190882f7f1bdc34667388844fe6d5fce0747d6f8df2075d72f911bb31bbc97f4cd5478deb712563a23d5e3b52034c697d346363136ecccbff42c6e3243381fa52d0bc2325be115a3cc877b8be944b8f2d1c6bc164c5251bdae2cd2a4843d6f022f8bb46fcdf3c8b2e978d48635ce2f02332391e4d22b1b4f6f853e51556c4bc12898d6deb4e955eb0018249472827dbae2a9d590a68218ebb4658fd15e554c8cf828b58a313f9ea11ffc3960040f063ed73d39589f024feeaa0e8cfc4f05df22a63ba5532c425f31f00ff58f66f1c70f411df6917d2210f7f953dcadd6ed9b3c978fef33559d1450a607416ab3b1e18e46a4ba4e5e15e096379017d2787ffd5f7f02b5135438c10712ef0e006f70a8dc3a63a86081956919c11ee42b4bb1bf8b38696121108e818e04959f48bf5f99bb59e2ae4fb30b68c11197199f546343777bc3194dc4b24dd177b7578c6a0a11d1709edc290ec7d61158ae25e71dd97caaa739e81c3bd7786107af822eed538a69d1afada7b6277b69c252d48498727945909459ac2d8345bf8e0bf129865d18e20c7127eb22acffca916fbb5fb6913e9642bd3ef4ad77e31a9d453201d71c2f132e32f034626b0d93d0e44e14497a49439b9871ec80242e9458a2a9e8cfb13fe459244698e72785ea665c0ddfdb971dd4495a674c916e5934d944eef699c5d6004e5671fb02c68f94128fd32a819ac49afa9993";
        bytes
            memory expected = hex"9399fa9ac49a812ad38f12948fc602fb71564e00d6c599f6ee44d934596e914c675a49d41d97dbdf0d5c66ea8527e798462459e43fb1cfe8a9a258942e2480ec71989b43497a49144ee4d0930d6b6234f0322e132f1cd70132459d1ae377adf43ebd42963e91b65fbb6f91caffac22eb27710ce2185d8629f10b8ebf45832dac5994904579729884d452c2697b27b6a7adafd1698a53ed2e82af076178d73b1ce839a7aa7cd91de725ae5811d6c70e29dc9e70d1110a6a8c57b777d14db2c44d19c37b774363549f199711c1680bb34faee259bb995fbf489f95048e818e10216169388bbfb14b2be41ec11969958160a8633adca8706f000eef1207c1385413b5027f5ffd7f78d217903796e0155e4ebaa4468ee1b1b36a4107a650149d5533ef8f973c9bedd6addc53f9f710227d91f61d410fc7f1668ff50ff0315f422c53a53ba622df054ffc8c0eaaee4f029f58393dd73e060f046039fc1fa19e3f318ab528f88c4c555ed18f65b4eb1882a690d5a9e2ba7d827294241800eb55e9b4ded69828c14b6c55513e856f4f1b2bd2e4912333022fce3586d478e9b2c8f3cd6fb48b2f026f3d84a4d22caebd51524c16bcc6d1f2b844e98b7b87cca315e15b32c20b2da51f3843326e2cf4bfccec36313646d397c63420b5e3d5233a5612b7de7854cdf497bc1bb31b912fd77520dff8d64707ce5f6dfe4488386746c3bdf1f78208197837b025d746d2bc860699bf18ab86bc6aaf3cbc2aa097827f6c16259921922dad993373c4c8a7394d54439225d2c87abf1fd4dcac03670bdee13ff1eda2f28cfbd784f7799cae85e3e94759c325403caf2f554a0a54456a12f87f6b1463b2ac737c32a7bf8396ed894bdeaa0da6deb1923920c28865013f9c25e6779ae2a09d2b99327f9e94ab3e31e8cf27f8146e0c8283ff153a6b54a1b4019c15415e70beb14f2b3cab04c51ee968503a8553970ea977ac08062a199bf98be36fa4c7f96cbf88ed2074f2d8250d58d32641b702c02354bfdd5047c25eff6127bb045bc65b00c2eb4c70db1e59db48d3f09bb8d451f4afd496cfd869487145065253622c362597ef5441bee3ef3d78ccc0c238d2aab62f573d2e8489a9fb8e59615c4ec684e9d11cd629addd2d9e803a346172b91ae82e0e6dccf7e69dd351cf54b057a0b7370dc3fc38a645d35f4f59dcb12146fb83429f6d2e4411382ce53c093f2412a7672746f480b7119a36af6ca2386bffa5c9b1b70e61f13d7404ff8725e805018c959e971a9d175071c98ef9a654ef19373c864e34b553ad923da7591fe14e2846045d8738940a6360c01064690c31946835f8d4aad935493ce77513e5b2d7bc1c43c3de10a35afa5ed4294972147dfbbbdae50ffecc0e77082031b3e1f098447495bd505c16f8b69088377f515a77a8c79d4d6b338714f205a48fa34a9730baaaa044c7d9231bcd016952543a48c6ca4efb9ceff45e1c9ba457af6b1342600a9f43a7c8ff2c31a4d3054cda84b3ea33b5de7a1e7d788fb45082cbfb";

        (bool success, bytes memory response) = challenge.staticcall(data);
        require(success);
        assertEq(response, expected);
    }
}
